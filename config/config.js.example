

// PATHS 
// - where GLAMpipe can strore project data on *non-docker* installation
// default: ""
var dataPath = "";

// location of ui
// default: "/"
var uiPath = "/";

// path for non-GLAMpipe html files (if there is a need to serve files from same container)
var staticPath = "/static"; 

// - file location of node files
// default: "" (means that GP uses internal nodes)
var nodePath = ""; 



// AUTHENTICATION 
// - "none" = do not use authentication, i.e. local install
// - "local" = use local authentication
// - "shibboleth" = use shibboleth headers
//var authentication = "shibboleth";
var authentication = "none";

// local
var localCanRegister = true;

// shibboleth
var shibbolethUsers = [];
var shibbolethHeaderId = "mail";

var disableBatchDownloads = false;
var secret = "Set something here";



// VISIBLE nodes
// defines what nodes are available for use
// default: "null" -> all nodes are available
var visible_tags = null;


// PROXY passes
// - urls that are allowed for UI to make requests via GLAMpipe's own proxy (bypassing CORS restrictions)
var PROXY_passes = [
	"http://localhost/",
	"https://demo.dspace.org/",
	"http://demoprints.eprints.org/"
]

var IP_passes = [];

var MP = "__mp"; // prefix 
var url = "http://localhost";

var exports = module.exports = {};

exports.source =  MP + "_source";
exports.loadNodesFromGithub = false;
exports.dataPath = dataPath;
exports.nodePath = nodePath;
exports.uiPath = uiPath;
exports.staticPath = staticPath;
exports.url = url;
exports.authentication = authentication;
exports.disableBatchDownloads = disableBatchDownloads;
exports.canRegister = localCanRegister;
exports.secret = secret;
exports.tags = visible_tags;

exports.IP_passes = IP_passes;
exports.PROXY_passes = PROXY_passes;

exports.shibbolethUsers = shibbolethUsers;
exports.shibbolethHeaderId = shibbolethHeaderId;
