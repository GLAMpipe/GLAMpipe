
// DEVELOPER MODE
// when set true, GLAMpipe node scripts are loaded from file on each run. Handy for development.
var nodeDevMode = false;

// PATHS 
var GP = "__gp"; // prefix 
var url = "http://localhost";
var publicUrl = "http://localhost:3000/";

// - where GLAMpipe can strore project data on *non-docker* installation
// default: ""
var dataPath = "";

// location of ui
// default: "/"
var uiPath = "/";

// - file location of node files
// default: "nodes" (means that GP uses internal nodes)
var nodePath = "nodes"; 

// path for non-GLAMpipe html files (if there is a need to serve files from same container)
var staticPath = "/static"; 

// delay (in milliseconds) before GLAMpipe tries to make a mongo connection. Compose up might fail if this is 0
var start_delay = 5000

// AUTHENTICATION 
// - "none" = do not use authentication, i.e. local install
// - "local" = use local authentication
// - "shibboleth" = use shibboleth headers
var authentication = "none";

// can anyone browse data? (defines if GET request are open or not)
var public = true;

// local
var localCanRegister = true;

// port
var port = 3000

// SHIBBOLETH
var shibbolethUsers = [];
var shibbolethHeaderId = "";
// defines which shibboleth headers are added to the document submitted when data is added to a collection via REST api. 
var shibbolethHeadersToData = [];
// values "UTF-8" or "Latin_1"
var shibbolethHeadersEncoding =  "UTF-8";

var disableBatchDownloads = false;
var secret = "Set something here";

// SMTP for email nodes (for backend use)
var smtp = "";
var smtpSender = "";

// VISIBLE nodes
// defines what nodes are available for use
// default: "null" -> all nodes are available
var visible_tags = null;


// PROXY passes
// - urls that are allowed for UI to make requests via GLAMpipe's own proxy (bypassing CORS restrictions)
var PROXY_passes = [
	"http://localhost/",
	"https://demo.dspace.org/",
	"http://demoprints.eprints.org/"
]

var IP_passes = [];

var exports = module.exports = {};

exports.source =  GP + "_source";
exports.loadNodesFromGithub = false;
exports.dataPath = dataPath;
exports.nodePath = nodePath;
exports.uiPath = uiPath;
exports.staticPath = staticPath;
exports.url = url;
exports.publicUrl = publicUrl;
exports.authentication = authentication;
exports.public = public;
exports.disableBatchDownloads = disableBatchDownloads;
exports.canRegister = localCanRegister;
exports.secret = secret;
exports.tags = visible_tags;
exports.start_delay = start_delay;
exports.port = port;

exports.IP_passes = IP_passes;
exports.PROXY_passes = PROXY_passes;

exports.shibbolethUsers = shibbolethUsers;
exports.shibbolethHeaderId = shibbolethHeaderId;
exports.shibbolethHeadersToData = shibbolethHeadersToData;
exports.shibbolethHeadersEncoding = shibbolethHeadersEncoding;

exports.smtp = smtp;
exports.smtpSender = smtpSender;

exports.nodeDevMode = nodeDevMode;
