{
    "nodeid": "download_internet_archive_image",
    "type": "download",
    "subtype": "Internet Archive",
    "title": "images",
    "description": "Downloads images from Internet Archive.",


    "scripts": {
        "hello":
        [
            "out.say('news', 'You added a download node'); ",
            "context.node.out_field = context.node.params.out_field; ",
            "context.node.dirsuffix = '_' + context.node.params.filesize; ",
            "context.node.title = context.node.title + ' (' + context.node.params.filesize + ')'; "
        ],
        
        "init":
        [
            "context.node.out_field  = context.node.params.field + '_download'; ",
            "context.base_url = 'http://archive.org/download/'; ",
            "out.say('progress', 'I have ' + context.doc_count + ' images to download!'); "
        ],
        
        "pre_run": 
        [
			"for(var i = 0; i < context.doc.metadata.files.length; i++) {",
			"    var file = context.doc.metadata.files[i]; ",
			
			"    /* check if we downloading thumbnails or originals  */",
			"    if(context.node.params.filesize == 'thumb') { ",
			"        if( file.format == 'JPEG Thumb') { ",
			"            out.url = context.base_url + context.doc.identifier + '/' + file.name; ",
			"            out.file = file.name; ",
			"            break; ",
			"        }",
			"    } else { ", 
			"        var ext_split = file.name.split('.'); ",
			"        var ext = ext_split[ext_split.length - 1].toLowerCase(); ",
			"        if( file.source == 'original' && file.format != 'Metadata' && ext != 'yaml' && ext != 'xml') { ",
			"            out.url = context.base_url + context.doc.identifier + '/' + file.name; ",
			"            out.file = file.name; ",
			"            break; ",
			"        } ",
			"    } ",
			"}",
			"if(out.url == null) ",
			"    out.say('progress', 'URL not found!');",
			"else ",
			"    out.say('progress', 'starting to download:' + out.url); "
        ],
        
        "run": 
        [
			"if(context.error) { ",
			"    out.say('error', context.error); ",
			"    out.value = context.error; ",
			"} else { ",
			"    var len = parseInt(context.response.headers['content-length'], 10); ",
			"    var total = len / 1048576; ",
			"    out.say('progress', 'Downloaded ' + total.toFixed(2) + ' Mt'); ",
			"    out.value = context.path.join(context.node.dir, out.file); ",
			"}"
        ],
        
        "finish":"out.say('finish', 'Files downloaded!')"
    },
    
    "views": {
        "params":
        [
            "<label>Thumbnails or originals</label> ",
            "<select id='IA_download_filesize' name='filesize'> ",
            "    <option value='thumb' selected='selected'>thumbnails</option> ",
            "    <option value='original'>original</option>",
            "</select> ",
            "<label>Field to write download info (path etc.)?</label> ",
            "<input name='out_field' id='IA_download_out_field' value='downloaded_thumb' />",
            "<label>How to name files?</label> ",
            "<select name='filename_type'> ",
            "    <option value='original' selected='selected'>use original</option> ",
            "    <option value='own'>make your own</option>",
            "</select> ",
            "<label>construct your own filename (not implemented)</label>",
            "<input name='file__1' class='short_input'/> + ",
            "<input name='file__2' class='dynamic_field middle_input' /> + <br>",
            "<input name='file__3' class='short_input'/> + ",
            "<input name='file__4' class='dynamic_field middle_input' /> + <br>",
            "<input name='file__5' class='short_input'/> + * ",
            "<select name='counter'> ",
            "    <option>document counter</option> ",
            "    <option>no counter</option>",
            "</select> ",
            "<br>*) using document counter prevents duplicate file names",
            "<script>$('#IA_download_filesize').change(function() {$('#IA_download_out_field').val('downloaded_' + $(this).val());});</script>"
        ],
        "settings": 
        [
            "no settings"
        ]
    }
}
