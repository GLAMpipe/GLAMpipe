{
	"nodeid": "source_api_flickr",
	"type": "source",
	"subtype": "API",
	"title": "Flickr",
    "status": "usable",
	"usage":"",
	"description": "Import from Flickr (requires an <a target=\"_blank\" href=\"https://www.flickr.com/services/api/misc.api_keys.html\">API key</a>)",
	
	"scripts": {
		"hello": "out.say('news', 'You added a Flickr import node'); ",
        "bye": "out.say('finish', 'This does NOT remove data. Bye!'); ",
		
		"init":	[
				"if(context.node.settings.apikey == '') { ",
				"   out.say('error', 'You must give an API key!'); ",
                "   context.init_error = 'API key missing'; ",
				"} else {",
				"    var base_url = 'https://api.flickr.com/services/rest/?method=flickr.photosets.getPhotos';",
				"    var format = '&extras=license,url_q,url_m,url_o,description,license,date_taken,date_upload&format=json&nojsoncallback=?';",
				"    out.url = base_url + '&photoset_id=' + context.node.params.album + format + '&api_key=' + context.node.settings.apikey;",
				"    out.say('news', out.url); ",
				"}"
				],
                
		"run":
		[
            "if (context.data.stat == 'fail') { ",
			"   out.say('error', context.data.message); ",
			"   context.node_error = context.data.message; ",
            
			"} else { ",
            "   /* data cleaning: /* ",
			"   /* - make description accessible as a plain string instead of object /* ",
            "   /* - add thumbnail field */",
            "   /* - delete description object (remains as description_str */",
			"    for (var i=0; i < context.data.photoset.photo.length; i++) { ",
			"        context.data.photoset.photo[i].description_str = context.data.photoset.photo[i].description._content; ",
            "       context.data.photoset.photo[i].thumbnail_html = '<img src=\"' + context.data.photoset.photo[i].url_q + '\"/>'; ",
            "       delete context.data.photoset.photo[i].description; ",
			"     }",
            
			"    out.value = context.data.photoset.photo;",
			"}"
		],
		"finish":"out.say('finish', 'Flickr images fetched to' + context.node.params.collection); "
	},
	
	"views": {

		"params":
		[
            "<h1>FLICKR</h1>",
			"<label>title</label>",
			"<input type=\"text\" name=\"title\" id=\"title\"/>",
			"<label>Album ID</label>",
			"<input type=\"text\" name=\"album\" id=\"album\" required />"
		],
		"settings":
		[
			"<label>Flickr API key </label>",
			"<input type=\"text\" name=\"apikey\" id=\"apikey\" />"
		]
	}
}
