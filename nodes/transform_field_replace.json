{
	"nodeid": "transform_field_replace",
	"title": "Search and Replace",
	"type": "transform",
	"subtype": "string manipulation",
    "status": "usable",
	"description": "Search and replace a string. You can use regular expressions.",
	"scripts": {
	
		"hello":
		[ 
			"out.say('news', 'You added a node'); ",
			"/* set output field */",
			"context.node.out_field = context.node.params.in_field + '_' + context.node.params.suffix; "
		],
		
        "bye": "out.say('news', 'Deleted node. Bye!'); ",
        
        "init":
        [
			"out.say('progress', 'Starting replacing..'); ",
            "out.say('progress','search: ' + context.node.settings.search); ",
            "out.say('progress','replace: ' + context.node.settings.replace); "
		],
		
		"run": 
		[
            "if(context.doc[context.node.params.in_field]) {",
            "   var value = context.doc[context.node.params.in_field]; ",
            "   if(value.constructor.name != 'Array') { ",
            "      for (var i=0; i < context.node.settings.search.length; i++) { ",
			"         var reg = new RegExp(context.node.settings.search[i], 'g'); ",
            "         if(value !== null) {",
			"             if( typeof value === 'string') {",
			"                 value = value.replace(reg, context.node.settings.replace[i]);",
			"             } else if (value.constructor.name === 'Array') {",
			"                 for (j = 0; j < value.length; j++) { ",
			"                     value[j] = value[j].replace(reg, context.node.settings.replace[i]); ",
			"                 }",
			"             }",
            "         }",
            "      }",
            "   out.value = value;",
            "   } else { ",
            "        out.say('error', 'Sorry, can not process arrays...'); ",
            "    }",
            "} else { ",
            "   out.say('error', 'Field not found'); ",
            "}"
		],
		
		"finish": "out.say('finish', 'Replace done!');"
	},
	
	"views": {
		"params":
		[
			"<label>Note title</label> <input name='title'/>",
			"<label>in field:</label> <input class='dynamic_field' name='in_field'/>",
			"<label>output field suffix:</label> <input name='suffix'/ value='_replaced'>"
		],
		"settings":
		[
            "<table>",
            "<tr><td>",
			"<label>find this:</label> <input name='search[1]'/>",
            "</td><td>",
			"<label>replace with this:</label> <input name='replace[1]'/>",
            "</td></tr>",
            "<tr><td>",
			"<label>find this:</label> <input name='search[2]'/>",
            "</td><td>",
			"<label>replace with this:</label> <input name='replace[2]'/>",
            "</td></tr>",
            "<tr><td>",
			"<label>find this:</label> <input name='search[3]'/>",
            "</td><td>",
			"<label>replace with this:</label> <input name='replace[3]'/>",
            "</td></tr>",
            "<tr><td>",
			"<label>find this:</label> <input name='search[4]'/>",
            "</td><td>",
			"<label>replace with this:</label> <input name='replace[4]'/>",
            "</td></tr>",
            "<tr><td>",
			"<label>find this:</label> <input name='search[5]'/>",
            "</td><td>",
			"<label>replace with this:</label> <input name='replace[5]'/>",
            "</td></tr>",
            "</table>"
           
		]
	}
}
