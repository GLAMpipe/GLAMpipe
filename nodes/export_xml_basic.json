{
    "nodeid": "export_xml_basic",
    "type": "export",
    "subtype": "xml",
    "title": "simple",
    "status": "works",
    "description": "Export collection as XML file. Very simple version. Do not export objects.",


    "scripts": {
        "hello": "out.say('news', 'You added a XML export node'); context.node.title = context.node.params.file; ",
        "bye": "out.say('news', 'Deleted XML export node. Bye!'); ",
        "init":"out.value = '<root>\\n';",
        "run": 
        [
            "function escape (val) { ",
            "   if( typeof val == \"string\") { ",
            "       var s = val.replace(/</g, '&alt;'); ",
            "       return s.replace(/&/g, '&amp;'); ",
            "   } else if ( typeof val == \"number\") {",
            "       return val; ",
            "   }",
            "}",
            "var str = '';",
            "var record_tag = context.node.settings.root;",
            "var tag_open = ' <' + record_tag + '>\\n';",
            "var tag_close = ' </' + record_tag + '>\\n';",
            "for(f in context.doc) {",
            "   var tag = context.node.settings['_mapkey_' + f];",
            "   if(tag != '') {",
            "       if (context.doc[f] !== null && context.doc[f].constructor.name === 'Array') {",
            "           for (var i = 0; i < context.doc[f].length; i++ ) { ",
            "               str += '    <'+tag+'>' + escape(context.doc[f][i]) + '</'+tag+'>\\n';",
            "           }",
            "       } else {",  
            "           str += '    <'+tag+'>' + escape(context.doc[f]) + '</'+tag+'>\\n'",
            "       }",
            "   }",
            "};",
            "",


            "if(parseInt(context.count) % 100 == 0) ",
            "    out.say('progress', context.node.type.toUpperCase() + ': processed ' + context.count + '/' + context.doc_count);",
            "",
            "out.value = tag_open + str + tag_close;"
        ],
        
        "finish":
        [
            "out.value = '</root>';",
            "out.say('finish','Export done to \"' + context.node.dir + '/' + context.node.params.file + '\"');"
        ],
        
        "view": 
        [
            "var c = context; ",
            "out.html = '<h2>I (export node) worked hard</h2>'; ",
            "out.html += '<a href=\"/export/'+c.node.project_dir + '/' + c.node.number + '_' + c.node.nodeid + '/' + c.node.params.file + '\">download result</a>'; "
        ]
    },
    
    "views": {

        "params":"<label>file name</label><input name=\"file\"/>",
        "settings":[
                    "<label>record element name </label><input name=\"root\" value=\"record\"/>",
                    "<h3>mapping</h3>",
                    "<label>Select mapping </label>",
                    "<button id=\"xml_basic_fetch\" class=\"fetch_record\">fetch fields</button>",
                    "<button id=\"xml_basic_copy\" class=\"fetch_record\">copy fields</button>",
                    "<script>",
                    "   $(\"#xml_basic_fetch\").click(function(e){",
                    "       var obj=$(e.target);",
                    "       var url=\"/get/collection/\"+nodes.currentCollection+\"?skip=0&limit=1\";",
                    "       $.getJSON(url, function(data){",
                    "           var rec=data[0];",
                    "           var table=$('<table><th>current name</th><th>new name</th></table>');",
                    "           for(var f in rec){",
                    "               if(rec[f] !== null && typeof rec[f] === \"object\" && f != \"_id\") {",
                    "                   var field=$('<tr><td>' +f+ '</td><td><input name=\"_mapkey_'+f+'\"/>A</td></tr>');",
                    "               } else {",
                    "                   var field=$('<tr><td>' +f+ '</td><td><input name=\"_mapkey_'+f+'\"/></td></tr>');",
                    "               }",
                    "               table.append(field);",
                    "           }",
                    "           obj.parent().append(table);",
                    "       })",
                    "   });",
                    "   $(\"#xml_basic_copy\").click(function(e){",
                    "       var obj=$(e.target);",
                    "       obj.parent().find(\"table tr\").each(function(index) {",
                    "           var field = $( this ).find(\"td\").text();",
                    "           $( this ).find(\"input\").val(field);",
                    "       });",
                    "   });",
                    "</script>"
                    ]
    }
}
