{
    "nodeid": "export_csv_basic",
    "type": "export",
    "subtype": "csv",
    "title": "simple",
    "status": "works",
    "description": "Export collection as CSV file. Exports arrays but do not export objects.",


    "scripts": {
        "hello": "out.say('news', 'You added a CSVexport node'); context.node.title = context.node.params.file; ",
        "bye": "out.say('news', 'Deleted CSV export node. Bye!'); ",
        "init":
        [
            "var c = context;",
            "c.sep = context.node.settings.sep; ",
            "c.arr_sep = context.node.settings.arr_sep; ",
            
            "var row = [];",
            "for(f in context.doc_eka) {",
            "    if(f != '__mp_source' && f != '_id') ",
            "        row.push(f); ",
            "};",
            "out.value = row.join(c.sep) + '\\n'; "
        ],
        
        "run": 
        [

            "function getVal (val) { ",
            "   if( typeof val == \"string\" || typeof val == \"number\")  ",
            "       return val; ",
            "   else ",
            "       return ''; ",
            "}",
            
            "   /* quote if there is a separator in value  */",
            "function quote (str) {",
            "   if(str.indexOf(c.sep) > -1) ",
            "       return '\"' + str + '\"'; ",
            "   else ",
            "       return str; ",
            "}",
            
            "var row = [];",

            "for(f in context.doc) {",
            "    if(f != '__mp_source' && f != '_id') {",
            "       if (context.doc[f] !== null && context.doc[f].constructor.name === 'Array') {",
            "           var arr_row = []; ",
            "           for (var i = 0; i < context.doc[f].length; i++ ) { ",
            "               /* ignore objects in arrays */",
            "               if (typeof context.doc[f][i] !== 'object') ",
            "                   arr_row.push(getVal(context.doc[f][i])); ",
            "           }",
            "           var arr_str = quote(arr_row.join(c.arr_sep)); ",
            "           row.push(arr_str); ",
            "       } else {",  
            "           row.push(quote(getVal(context.doc[f]))); ",
            "       }",
            "    }",
            "};",
            "",


            "if(parseInt(context.count) % 100 == 0) ",
            "    out.say('progress', context.node.type.toUpperCase() + ': processed ' + context.count + '/' + context.doc_count);",
            "",
            "out.value = row.join(c.sep) + '\\n'; " 
        ],
        
        "finish":
        [
            "out.say('finish','Export done to \"' + context.node.dir + '/' + context.node.params.file + '\"');"
        ],
        
        "view": 
        [
            "var c = context; ",
            "out.html = '<h2>I (export node) worked hard</h2>'; ",
            "out.html += '<a href=\"/export/'+c.node.project_dir + '/' + c.node.number + '_' + c.node.nodeid + '/' + c.node.params.file + '\">download result</a>'; "
        ]
    },
    
    "views": {

        "params":"<label>file name</label><input name=\"file\"/>",
        "settings": [
            "<label>separator </label><input name=\"sep\" value=\",\"/>",
            "<label>array separator </label><input name=\"arr_sep\" value=\"|\"/>"
        ]
    }
}
